name: Trigger

on:
  schedule:
    - cron: '47 2 * * *'
  push:
  pull_request:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io

  ## github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  SOURCE_REPO_OWNER: fluent
  SOURCE_REPO_NAME: fluentd

  DOCKER_HUB_OWNER: jbaddock
  DOCKER_REPO_NAME: fluentd-os

jobs:
  checkbuild:
    name: Check and build image
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Get Docker tag
        id: getDockerTag
        uses: jbaddock/gha-get-docker-hub-tags@v1.0.0
        with:
          org: ${{env.DOCKER_HUB_OWNER}}  # Docker Hub user or organisation name
          repo: ${{env.DOCKER_REPO_NAME}}  # Docker Hub repository name

      - name: Get SOURCE Github Release Tag
        id: sourceRepoTag
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: ${{env.SOURCE_REPO_OWNER}}
          repo: ${{env.SOURCE_REPO_NAME}}

      - name: Set up Environment Variables
        id: envSetup
        run: |
          srcRepoTag=${{ steps.sourceRepoTag.outputs.release }}
          dockerTag=${{ steps.getDockerTag.outputs.tag }}
        
          # Add "v" prefix to dockerTag if srcRepoTag starts with it.  The docker task strips the "v"
          [[ "$srcRepoTag" == "v"* ]] && dockerTag="v$dockerTag"
          
          "contScript=true"  # Set the variable to being with.
          # If this is a SCHEDULE and vX.X.X from source matches vX.X.X in Docker, set variable to skip all the remaining steps.
          if [[ "$GITHUB_EVENT_NAME" == "schedule" && "$dockerTag" == *"$srcRepoTag"* ]]; then
            "contScript=false"
            scriptStep="Schedule + Match"
          fi

          # Build the new tag.  Is srcRepoTag tag in the Docker Repo Tag.
          if [[ "$dockerTag" == *"$srcRepoTag"* ]]; then
            dockerTagSuffix=$(echo "${{ steps.getDockerTag.outputs.tag }}" | sed 's/^[^-]*-//')
            dockerTagNew="${srcRepoTag}-$((10#${dockerTagSuffix} + 1))"   # Increment suffix +1
            scriptStep="Increment Suffix +1 "
          else
            dockerTagNew="${srcRepoTag}-1"  # Make new tag and append Suffix
            scriptStep="New Tag"
          fi
          
          # Outputs to Docker Env.  Only one tag is needed to be outputted now
          {
            echo "env_dockerTagNew=$dockerTagNew"
          } >> "$GITHUB_OUTPUT"
          
          # Summary page Markdown table
          {
            echo "### Workflow variables"
            echo "| Variable         | Value              |"
            echo "| ---------------- | ------------------ |"
            echo "| env_eventName    | $GITHUB_EVENT_NAME |"
            echo "| env_contScript   | $contScript        |"
            echo "| env_scriptStep   | $scriptStep        |"
            echo "| env_dockerTag    | $dockerTag         |"
            echo "| env_dockerTagNew | $dockerTagNew      |"
            echo "| env_srcRepoTag   | $srcRepoTag        |"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Debug
        run: |
          echo "runTask value: ${{ steps.envSetup.outputs.env_dockerTag }}"

      - name: Check out the repo
        if: ${{ steps.envSetup.outputs.env_contScript == 'true' }}
        uses: actions/checkout@v4          

      - name: Set up QEMU
        if: ${{ steps.envSetup.outputs.env_contScript == 'true' }}
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildx
        if: ${{ steps.envSetup.outputs.env_contScript == 'true' }}
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login to Docker Hub
        if: ${{ steps.envSetup.outputs.env_contScript == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker images
        if: ${{ steps.envSetup.outputs.env_contScript == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.envSetup.outputs.env_dockerTagNew }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest